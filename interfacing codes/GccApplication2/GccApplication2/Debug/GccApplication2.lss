
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000022c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000691  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000593  00000000  00000000  000009bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000284  00000000  00000000  00000f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  000011d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031e  00000000  00000000  0000121c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d0  00000000  00000000  0000153a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  0000160a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e2       	ldi	r30, 0x2C	; 44
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 14 01 	jmp	0x228	; 0x228 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
{
    /* Replace with your application code */
	
	
	 
  DIO_DIRECTION_PORT(port1 , 0 , OUTPUT);
  82:	41 e0       	ldi	r20, 0x01	; 1
  84:	60 e0       	ldi	r22, 0x00	; 0
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	0e 94 56 00 	call	0xac	; 0xac <DIO_DIRECTION_PORT>
  DIO_DIRECTION_PORT(port2 , 1 , INPUT);
  8c:	40 e0       	ldi	r20, 0x00	; 0
  8e:	61 e0       	ldi	r22, 0x01	; 1
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	0e 94 56 00 	call	0xac	; 0xac <DIO_DIRECTION_PORT>
  DIO_DIRECTION_PORT(port3 , 2 , INPUT_PULL_UP);
  96:	42 e0       	ldi	r20, 0x02	; 2
  98:	62 e0       	ldi	r22, 0x02	; 2
  9a:	82 e0       	ldi	r24, 0x02	; 2
  9c:	0e 94 56 00 	call	0xac	; 0xac <DIO_DIRECTION_PORT>
  DIO_DIRECTION_PORT(port4 , 3 , OUTPUT);
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	63 e0       	ldi	r22, 0x03	; 3
  a4:	83 e0       	ldi	r24, 0x03	; 3
  a6:	0e 94 56 00 	call	0xac	; 0xac <DIO_DIRECTION_PORT>
  aa:	ff cf       	rjmp	.-2      	; 0xaa <main+0x28>

000000ac <DIO_DIRECTION_PORT>:
 */ 

#include "DIO.h"

void DIO_DIRECTION_PORT(u8 port , u8 pinNum, u8 pinDirection){
	switch(pinDirection){
  ac:	41 30       	cpi	r20, 0x01	; 1
  ae:	29 f0       	breq	.+10     	; 0xba <DIO_DIRECTION_PORT+0xe>
  b0:	c0 f1       	brcs	.+112    	; 0x122 <DIO_DIRECTION_PORT+0x76>
  b2:	42 30       	cpi	r20, 0x02	; 2
  b4:	09 f4       	brne	.+2      	; 0xb8 <DIO_DIRECTION_PORT+0xc>
  b6:	70 c0       	rjmp	.+224    	; 0x198 <DIO_DIRECTION_PORT+0xec>
  b8:	08 95       	ret
		case OUTPUT:
			switch(port){
  ba:	81 30       	cpi	r24, 0x01	; 1
  bc:	89 f0       	breq	.+34     	; 0xe0 <DIO_DIRECTION_PORT+0x34>
  be:	28 f0       	brcs	.+10     	; 0xca <DIO_DIRECTION_PORT+0x1e>
  c0:	82 30       	cpi	r24, 0x02	; 2
  c2:	c9 f0       	breq	.+50     	; 0xf6 <DIO_DIRECTION_PORT+0x4a>
  c4:	83 30       	cpi	r24, 0x03	; 3
  c6:	11 f1       	breq	.+68     	; 0x10c <DIO_DIRECTION_PORT+0x60>
  c8:	08 95       	ret
				case 0:
					SET_BIT(DDRA, pinNum);
  ca:	2a b3       	in	r18, 0x1a	; 26
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <DIO_DIRECTION_PORT+0x2a>
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	6a 95       	dec	r22
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <DIO_DIRECTION_PORT+0x26>
  da:	82 2b       	or	r24, r18
  dc:	8a bb       	out	0x1a, r24	; 26
					break;
  de:	08 95       	ret
				case 1:
					SET_BIT(DDRB , pinNum);
  e0:	27 b3       	in	r18, 0x17	; 23
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	02 c0       	rjmp	.+4      	; 0xec <DIO_DIRECTION_PORT+0x40>
  e8:	88 0f       	add	r24, r24
  ea:	99 1f       	adc	r25, r25
  ec:	6a 95       	dec	r22
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <DIO_DIRECTION_PORT+0x3c>
  f0:	82 2b       	or	r24, r18
  f2:	87 bb       	out	0x17, r24	; 23
					break;
  f4:	08 95       	ret
				case 2:
					SET_BIT(DDRC , pinNum);
  f6:	24 b3       	in	r18, 0x14	; 20
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <DIO_DIRECTION_PORT+0x56>
  fe:	88 0f       	add	r24, r24
 100:	99 1f       	adc	r25, r25
 102:	6a 95       	dec	r22
 104:	e2 f7       	brpl	.-8      	; 0xfe <DIO_DIRECTION_PORT+0x52>
 106:	82 2b       	or	r24, r18
 108:	84 bb       	out	0x14, r24	; 20
					break;
 10a:	08 95       	ret
				case 3:
					SET_BIT(DDRD , pinNum);
 10c:	21 b3       	in	r18, 0x11	; 17
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_DIRECTION_PORT+0x6c>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_DIRECTION_PORT+0x68>
 11c:	82 2b       	or	r24, r18
 11e:	81 bb       	out	0x11, r24	; 17
					break;
 120:	08 95       	ret
			}
			break;
			
		case INPUT:
		switch(port){
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	99 f0       	breq	.+38     	; 0x14c <DIO_DIRECTION_PORT+0xa0>
 126:	28 f0       	brcs	.+10     	; 0x132 <DIO_DIRECTION_PORT+0x86>
 128:	82 30       	cpi	r24, 0x02	; 2
 12a:	e9 f0       	breq	.+58     	; 0x166 <DIO_DIRECTION_PORT+0xba>
 12c:	83 30       	cpi	r24, 0x03	; 3
 12e:	41 f1       	breq	.+80     	; 0x180 <DIO_DIRECTION_PORT+0xd4>
 130:	33 c0       	rjmp	.+102    	; 0x198 <DIO_DIRECTION_PORT+0xec>
			case 0:
			CLR_BIT(DDRA, pinNum);
 132:	9a b3       	in	r25, 0x1a	; 26
 134:	21 e0       	ldi	r18, 0x01	; 1
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	06 2e       	mov	r0, r22
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_DIRECTION_PORT+0x94>
 13c:	22 0f       	add	r18, r18
 13e:	33 1f       	adc	r19, r19
 140:	0a 94       	dec	r0
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_DIRECTION_PORT+0x90>
 144:	20 95       	com	r18
 146:	29 23       	and	r18, r25
 148:	2a bb       	out	0x1a, r18	; 26
			break;
 14a:	26 c0       	rjmp	.+76     	; 0x198 <DIO_DIRECTION_PORT+0xec>
			case 1:
			CLR_BIT(DDRB , pinNum);
 14c:	97 b3       	in	r25, 0x17	; 23
 14e:	21 e0       	ldi	r18, 0x01	; 1
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	06 2e       	mov	r0, r22
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_DIRECTION_PORT+0xae>
 156:	22 0f       	add	r18, r18
 158:	33 1f       	adc	r19, r19
 15a:	0a 94       	dec	r0
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_DIRECTION_PORT+0xaa>
 15e:	20 95       	com	r18
 160:	29 23       	and	r18, r25
 162:	27 bb       	out	0x17, r18	; 23
			break;
 164:	19 c0       	rjmp	.+50     	; 0x198 <DIO_DIRECTION_PORT+0xec>
			case 2:
			CLR_BIT(DDRC , pinNum);
 166:	94 b3       	in	r25, 0x14	; 20
 168:	21 e0       	ldi	r18, 0x01	; 1
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	06 2e       	mov	r0, r22
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_DIRECTION_PORT+0xc8>
 170:	22 0f       	add	r18, r18
 172:	33 1f       	adc	r19, r19
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_DIRECTION_PORT+0xc4>
 178:	20 95       	com	r18
 17a:	29 23       	and	r18, r25
 17c:	24 bb       	out	0x14, r18	; 20
			break;
 17e:	0c c0       	rjmp	.+24     	; 0x198 <DIO_DIRECTION_PORT+0xec>
			case 3:
			CLR_BIT(DDRD , pinNum);
 180:	91 b3       	in	r25, 0x11	; 17
 182:	21 e0       	ldi	r18, 0x01	; 1
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	06 2e       	mov	r0, r22
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_DIRECTION_PORT+0xe2>
 18a:	22 0f       	add	r18, r18
 18c:	33 1f       	adc	r19, r19
 18e:	0a 94       	dec	r0
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_DIRECTION_PORT+0xde>
 192:	20 95       	com	r18
 194:	29 23       	and	r18, r25
 196:	21 bb       	out	0x11, r18	; 17
			break;
		}
		case INPUT_PULL_UP:
		switch(port){
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	b1 f0       	breq	.+44     	; 0x1c8 <DIO_DIRECTION_PORT+0x11c>
 19c:	28 f0       	brcs	.+10     	; 0x1a8 <DIO_DIRECTION_PORT+0xfc>
 19e:	82 30       	cpi	r24, 0x02	; 2
 1a0:	19 f1       	breq	.+70     	; 0x1e8 <DIO_DIRECTION_PORT+0x13c>
 1a2:	83 30       	cpi	r24, 0x03	; 3
 1a4:	89 f1       	breq	.+98     	; 0x208 <DIO_DIRECTION_PORT+0x15c>
 1a6:	08 95       	ret
			case 0:
			CLR_BIT(DDRA, pinNum);
 1a8:	2a b3       	in	r18, 0x1a	; 26
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_DIRECTION_PORT+0x108>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_DIRECTION_PORT+0x104>
 1b8:	98 2f       	mov	r25, r24
 1ba:	90 95       	com	r25
 1bc:	92 23       	and	r25, r18
 1be:	9a bb       	out	0x1a, r25	; 26
			SET_BIT(PORTA , pinNum);
 1c0:	9b b3       	in	r25, 0x1b	; 27
 1c2:	89 2b       	or	r24, r25
 1c4:	8b bb       	out	0x1b, r24	; 27
			break;
 1c6:	08 95       	ret
			case 1:
			CLR_BIT(DDRB, pinNum);
 1c8:	27 b3       	in	r18, 0x17	; 23
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_DIRECTION_PORT+0x128>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_DIRECTION_PORT+0x124>
 1d8:	98 2f       	mov	r25, r24
 1da:	90 95       	com	r25
 1dc:	92 23       	and	r25, r18
 1de:	97 bb       	out	0x17, r25	; 23
			SET_BIT(PORTB , pinNum);
 1e0:	98 b3       	in	r25, 0x18	; 24
 1e2:	89 2b       	or	r24, r25
 1e4:	88 bb       	out	0x18, r24	; 24
			break;
 1e6:	08 95       	ret
			case 2:
			CLR_BIT(DDRC, pinNum);
 1e8:	24 b3       	in	r18, 0x14	; 20
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_DIRECTION_PORT+0x148>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_DIRECTION_PORT+0x144>
 1f8:	98 2f       	mov	r25, r24
 1fa:	90 95       	com	r25
 1fc:	92 23       	and	r25, r18
 1fe:	94 bb       	out	0x14, r25	; 20
			SET_BIT(PORTC , pinNum);
 200:	95 b3       	in	r25, 0x15	; 21
 202:	89 2b       	or	r24, r25
 204:	85 bb       	out	0x15, r24	; 21
			break;
 206:	08 95       	ret
			case 3:
			CLR_BIT(DDRD, pinNum);
 208:	21 b3       	in	r18, 0x11	; 17
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_DIRECTION_PORT+0x168>
 210:	88 0f       	add	r24, r24
 212:	99 1f       	adc	r25, r25
 214:	6a 95       	dec	r22
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_DIRECTION_PORT+0x164>
 218:	98 2f       	mov	r25, r24
 21a:	90 95       	com	r25
 21c:	92 23       	and	r25, r18
 21e:	91 bb       	out	0x11, r25	; 17
			SET_BIT(PORTD , pinNum);
 220:	92 b3       	in	r25, 0x12	; 18
 222:	89 2b       	or	r24, r25
 224:	82 bb       	out	0x12, r24	; 18
 226:	08 95       	ret

00000228 <_exit>:
 228:	f8 94       	cli

0000022a <__stop_program>:
 22a:	ff cf       	rjmp	.-2      	; 0x22a <__stop_program>
