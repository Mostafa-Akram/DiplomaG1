
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000004de  00000552  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000572  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000005e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010ca  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008b8  00000000  00000000  0000175a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007fd  00000000  00000000  00002012  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00002810  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000050d  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b9a  00000000  00000000  00002e11  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  000039ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ed       	ldi	r30, 0xDE	; 222
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 a9 00 	call	0x152	; 0x152 <main>
  7a:	0c 94 6d 02 	jmp	0x4da	; 0x4da <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <WriteIns>:
 */ 

#include "LCD_Int.h"


void WriteIns(u8 ins){
  82:	cf 93       	push	r28
  84:	c8 2f       	mov	r28, r24
	DIO_WritePin(RS,LOW);
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	80 e0       	ldi	r24, 0x00	; 0
  8a:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <DIO_WritePin>
	DIO_WritePort(LCD_PORT, ins);
  8e:	6c 2f       	mov	r22, r28
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <DIO_WritePort>
	DIO_WritePin(EN,HIGH);
  96:	61 e0       	ldi	r22, 0x01	; 1
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <DIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9e:	8f ec       	ldi	r24, 0xCF	; 207
  a0:	97 e0       	ldi	r25, 0x07	; 7
  a2:	01 97       	sbiw	r24, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <WriteIns+0x20>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <WriteIns+0x26>
  a8:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(EN,LOW);
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <DIO_WritePin>
  b2:	8f ec       	ldi	r24, 0xCF	; 207
  b4:	97 e0       	ldi	r25, 0x07	; 7
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <WriteIns+0x34>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <WriteIns+0x3a>
  bc:	00 00       	nop
	_delay_ms(1);
	
}
  be:	cf 91       	pop	r28
  c0:	08 95       	ret

000000c2 <WriteData>:

void WriteData(u8 data){
  c2:	cf 93       	push	r28
  c4:	c8 2f       	mov	r28, r24
	DIO_WritePin(RS,HIGH);
  c6:	61 e0       	ldi	r22, 0x01	; 1
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <DIO_WritePin>
	DIO_WritePort(LCD_PORT, data);
  ce:	6c 2f       	mov	r22, r28
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <DIO_WritePort>
	DIO_WritePin(EN,HIGH);
  d6:	61 e0       	ldi	r22, 0x01	; 1
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <DIO_WritePin>
  de:	8f ec       	ldi	r24, 0xCF	; 207
  e0:	97 e0       	ldi	r25, 0x07	; 7
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <WriteData+0x20>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <WriteData+0x26>
  e8:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(EN,LOW);
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <DIO_WritePin>
  f2:	8f ec       	ldi	r24, 0xCF	; 207
  f4:	97 e0       	ldi	r25, 0x07	; 7
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <WriteData+0x34>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <WriteData+0x3a>
  fc:	00 00       	nop
	_delay_ms(1);
	
}
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <LCD_Init>:
 102:	2f e7       	ldi	r18, 0x7F	; 127
 104:	88 e3       	ldi	r24, 0x38	; 56
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	21 50       	subi	r18, 0x01	; 1
 10a:	80 40       	sbci	r24, 0x00	; 0
 10c:	90 40       	sbci	r25, 0x00	; 0
 10e:	e1 f7       	brne	.-8      	; 0x108 <LCD_Init+0x6>
 110:	00 c0       	rjmp	.+0      	; 0x112 <LCD_Init+0x10>
 112:	00 00       	nop

void LCD_Init(void){
	_delay_ms(50);
	
	
	WriteIns(0x38); // 0011 1000 
 114:	88 e3       	ldi	r24, 0x38	; 56
 116:	0e 94 41 00 	call	0x82	; 0x82 <WriteIns>
 11a:	8f ec       	ldi	r24, 0xCF	; 207
 11c:	97 e0       	ldi	r25, 0x07	; 7
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <LCD_Init+0x1c>
 122:	00 c0       	rjmp	.+0      	; 0x124 <LCD_Init+0x22>
 124:	00 00       	nop

	_delay_ms(1);
	
	WriteIns(0x0c); // 0000 1100
 126:	8c e0       	ldi	r24, 0x0C	; 12
 128:	0e 94 41 00 	call	0x82	; 0x82 <WriteIns>
 12c:	8f ec       	ldi	r24, 0xCF	; 207
 12e:	97 e0       	ldi	r25, 0x07	; 7
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <LCD_Init+0x2e>
 134:	00 c0       	rjmp	.+0      	; 0x136 <LCD_Init+0x34>
 136:	00 00       	nop
	
	_delay_ms(1);
	
	WriteIns(0x01); // 0000 0001
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	0e 94 41 00 	call	0x82	; 0x82 <WriteIns>
 13e:	8f e6       	ldi	r24, 0x6F	; 111
 140:	97 e1       	ldi	r25, 0x17	; 23
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <LCD_Init+0x40>
 146:	00 c0       	rjmp	.+0      	; 0x148 <LCD_Init+0x46>
 148:	00 00       	nop
	
	_delay_ms(3);
	
	WriteIns(0x06); // 0000 0110
 14a:	86 e0       	ldi	r24, 0x06	; 6
 14c:	0e 94 41 00 	call	0x82	; 0x82 <WriteIns>
 150:	08 95       	ret

00000152 <main>:

int main(void)
{
    /* Replace with your application code */
	
	DIO_Init();
 152:	0e 94 c8 01 	call	0x390	; 0x390 <DIO_Init>
	LCD_Init();
 156:	0e 94 81 00 	call	0x102	; 0x102 <LCD_Init>
	WriteData('A');
 15a:	81 e4       	ldi	r24, 0x41	; 65
 15c:	0e 94 61 00 	call	0xc2	; 0xc2 <WriteData>
 160:	2f ef       	ldi	r18, 0xFF	; 255
 162:	89 e6       	ldi	r24, 0x69	; 105
 164:	98 e1       	ldi	r25, 0x18	; 24
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0x14>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0x1e>
 170:	00 00       	nop
	_delay_ms(1000);
	WriteData('h');
 172:	88 e6       	ldi	r24, 0x68	; 104
 174:	0e 94 61 00 	call	0xc2	; 0xc2 <WriteData>
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	89 e6       	ldi	r24, 0x69	; 105
 17c:	98 e1       	ldi	r25, 0x18	; 24
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <main+0x2c>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0x36>
 188:	00 00       	nop
	_delay_ms(1000);
	WriteData('m');
 18a:	8d e6       	ldi	r24, 0x6D	; 109
 18c:	0e 94 61 00 	call	0xc2	; 0xc2 <WriteData>


	
	

}
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	08 95       	ret

00000196 <DIO_InitPin>:
		volt= GET_BIT(PIND,pin_num);
		break;
	}
	
	return volt;
}
 196:	98 2f       	mov	r25, r24
 198:	96 95       	lsr	r25
 19a:	96 95       	lsr	r25
 19c:	96 95       	lsr	r25
 19e:	87 70       	andi	r24, 0x07	; 7
 1a0:	61 30       	cpi	r22, 0x01	; 1
 1a2:	09 f4       	brne	.+2      	; 0x1a6 <DIO_InitPin+0x10>
 1a4:	55 c0       	rjmp	.+170    	; 0x250 <DIO_InitPin+0xba>
 1a6:	20 f0       	brcs	.+8      	; 0x1b0 <DIO_InitPin+0x1a>
 1a8:	62 30       	cpi	r22, 0x02	; 2
 1aa:	09 f4       	brne	.+2      	; 0x1ae <DIO_InitPin+0x18>
 1ac:	a1 c0       	rjmp	.+322    	; 0x2f0 <DIO_InitPin+0x15a>
 1ae:	08 95       	ret
 1b0:	91 30       	cpi	r25, 0x01	; 1
 1b2:	c1 f0       	breq	.+48     	; 0x1e4 <DIO_InitPin+0x4e>
 1b4:	28 f0       	brcs	.+10     	; 0x1c0 <DIO_InitPin+0x2a>
 1b6:	92 30       	cpi	r25, 0x02	; 2
 1b8:	39 f1       	breq	.+78     	; 0x208 <DIO_InitPin+0x72>
 1ba:	93 30       	cpi	r25, 0x03	; 3
 1bc:	b9 f1       	breq	.+110    	; 0x22c <DIO_InitPin+0x96>
 1be:	08 95       	ret
 1c0:	4a b3       	in	r20, 0x1a	; 26
 1c2:	21 e0       	ldi	r18, 0x01	; 1
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	b9 01       	movw	r22, r18
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_InitPin+0x38>
 1ca:	66 0f       	add	r22, r22
 1cc:	77 1f       	adc	r23, r23
 1ce:	8a 95       	dec	r24
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_InitPin+0x34>
 1d2:	cb 01       	movw	r24, r22
 1d4:	94 2f       	mov	r25, r20
 1d6:	98 2b       	or	r25, r24
 1d8:	9a bb       	out	0x1a, r25	; 26
 1da:	9b b3       	in	r25, 0x1b	; 27
 1dc:	80 95       	com	r24
 1de:	89 23       	and	r24, r25
 1e0:	8b bb       	out	0x1b, r24	; 27
 1e2:	08 95       	ret
 1e4:	47 b3       	in	r20, 0x17	; 23
 1e6:	21 e0       	ldi	r18, 0x01	; 1
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	b9 01       	movw	r22, r18
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_InitPin+0x5c>
 1ee:	66 0f       	add	r22, r22
 1f0:	77 1f       	adc	r23, r23
 1f2:	8a 95       	dec	r24
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_InitPin+0x58>
 1f6:	cb 01       	movw	r24, r22
 1f8:	94 2f       	mov	r25, r20
 1fa:	98 2b       	or	r25, r24
 1fc:	97 bb       	out	0x17, r25	; 23
 1fe:	98 b3       	in	r25, 0x18	; 24
 200:	80 95       	com	r24
 202:	89 23       	and	r24, r25
 204:	88 bb       	out	0x18, r24	; 24
 206:	08 95       	ret
 208:	44 b3       	in	r20, 0x14	; 20
 20a:	21 e0       	ldi	r18, 0x01	; 1
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	b9 01       	movw	r22, r18
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_InitPin+0x80>
 212:	66 0f       	add	r22, r22
 214:	77 1f       	adc	r23, r23
 216:	8a 95       	dec	r24
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_InitPin+0x7c>
 21a:	cb 01       	movw	r24, r22
 21c:	94 2f       	mov	r25, r20
 21e:	98 2b       	or	r25, r24
 220:	94 bb       	out	0x14, r25	; 20
 222:	95 b3       	in	r25, 0x15	; 21
 224:	80 95       	com	r24
 226:	89 23       	and	r24, r25
 228:	85 bb       	out	0x15, r24	; 21
 22a:	08 95       	ret
 22c:	41 b3       	in	r20, 0x11	; 17
 22e:	21 e0       	ldi	r18, 0x01	; 1
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	b9 01       	movw	r22, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_InitPin+0xa4>
 236:	66 0f       	add	r22, r22
 238:	77 1f       	adc	r23, r23
 23a:	8a 95       	dec	r24
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_InitPin+0xa0>
 23e:	cb 01       	movw	r24, r22
 240:	94 2f       	mov	r25, r20
 242:	98 2b       	or	r25, r24
 244:	91 bb       	out	0x11, r25	; 17
 246:	92 b3       	in	r25, 0x12	; 18
 248:	80 95       	com	r24
 24a:	89 23       	and	r24, r25
 24c:	82 bb       	out	0x12, r24	; 18
 24e:	08 95       	ret
 250:	91 30       	cpi	r25, 0x01	; 1
 252:	c1 f0       	breq	.+48     	; 0x284 <DIO_InitPin+0xee>
 254:	28 f0       	brcs	.+10     	; 0x260 <DIO_InitPin+0xca>
 256:	92 30       	cpi	r25, 0x02	; 2
 258:	39 f1       	breq	.+78     	; 0x2a8 <DIO_InitPin+0x112>
 25a:	93 30       	cpi	r25, 0x03	; 3
 25c:	b9 f1       	breq	.+110    	; 0x2cc <DIO_InitPin+0x136>
 25e:	08 95       	ret
 260:	4a b3       	in	r20, 0x1a	; 26
 262:	21 e0       	ldi	r18, 0x01	; 1
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	b9 01       	movw	r22, r18
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_InitPin+0xd8>
 26a:	66 0f       	add	r22, r22
 26c:	77 1f       	adc	r23, r23
 26e:	8a 95       	dec	r24
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_InitPin+0xd4>
 272:	cb 01       	movw	r24, r22
 274:	80 95       	com	r24
 276:	94 2f       	mov	r25, r20
 278:	98 23       	and	r25, r24
 27a:	9a bb       	out	0x1a, r25	; 26
 27c:	9b b3       	in	r25, 0x1b	; 27
 27e:	89 23       	and	r24, r25
 280:	8b bb       	out	0x1b, r24	; 27
 282:	08 95       	ret
 284:	47 b3       	in	r20, 0x17	; 23
 286:	21 e0       	ldi	r18, 0x01	; 1
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	b9 01       	movw	r22, r18
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_InitPin+0xfc>
 28e:	66 0f       	add	r22, r22
 290:	77 1f       	adc	r23, r23
 292:	8a 95       	dec	r24
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_InitPin+0xf8>
 296:	cb 01       	movw	r24, r22
 298:	80 95       	com	r24
 29a:	94 2f       	mov	r25, r20
 29c:	98 23       	and	r25, r24
 29e:	97 bb       	out	0x17, r25	; 23
 2a0:	98 b3       	in	r25, 0x18	; 24
 2a2:	89 23       	and	r24, r25
 2a4:	88 bb       	out	0x18, r24	; 24
 2a6:	08 95       	ret
 2a8:	44 b3       	in	r20, 0x14	; 20
 2aa:	21 e0       	ldi	r18, 0x01	; 1
 2ac:	30 e0       	ldi	r19, 0x00	; 0
 2ae:	b9 01       	movw	r22, r18
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_InitPin+0x120>
 2b2:	66 0f       	add	r22, r22
 2b4:	77 1f       	adc	r23, r23
 2b6:	8a 95       	dec	r24
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_InitPin+0x11c>
 2ba:	cb 01       	movw	r24, r22
 2bc:	80 95       	com	r24
 2be:	94 2f       	mov	r25, r20
 2c0:	98 23       	and	r25, r24
 2c2:	94 bb       	out	0x14, r25	; 20
 2c4:	95 b3       	in	r25, 0x15	; 21
 2c6:	89 23       	and	r24, r25
 2c8:	85 bb       	out	0x15, r24	; 21
 2ca:	08 95       	ret
 2cc:	41 b3       	in	r20, 0x11	; 17
 2ce:	21 e0       	ldi	r18, 0x01	; 1
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	b9 01       	movw	r22, r18
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <DIO_InitPin+0x144>
 2d6:	66 0f       	add	r22, r22
 2d8:	77 1f       	adc	r23, r23
 2da:	8a 95       	dec	r24
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <DIO_InitPin+0x140>
 2de:	cb 01       	movw	r24, r22
 2e0:	80 95       	com	r24
 2e2:	94 2f       	mov	r25, r20
 2e4:	98 23       	and	r25, r24
 2e6:	91 bb       	out	0x11, r25	; 17
 2e8:	92 b3       	in	r25, 0x12	; 18
 2ea:	89 23       	and	r24, r25
 2ec:	82 bb       	out	0x12, r24	; 18
 2ee:	08 95       	ret
 2f0:	91 30       	cpi	r25, 0x01	; 1
 2f2:	c1 f0       	breq	.+48     	; 0x324 <DIO_InitPin+0x18e>
 2f4:	28 f0       	brcs	.+10     	; 0x300 <DIO_InitPin+0x16a>
 2f6:	92 30       	cpi	r25, 0x02	; 2
 2f8:	39 f1       	breq	.+78     	; 0x348 <DIO_InitPin+0x1b2>
 2fa:	93 30       	cpi	r25, 0x03	; 3
 2fc:	b9 f1       	breq	.+110    	; 0x36c <DIO_InitPin+0x1d6>
 2fe:	08 95       	ret
 300:	4a b3       	in	r20, 0x1a	; 26
 302:	21 e0       	ldi	r18, 0x01	; 1
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	b9 01       	movw	r22, r18
 308:	02 c0       	rjmp	.+4      	; 0x30e <DIO_InitPin+0x178>
 30a:	66 0f       	add	r22, r22
 30c:	77 1f       	adc	r23, r23
 30e:	8a 95       	dec	r24
 310:	e2 f7       	brpl	.-8      	; 0x30a <DIO_InitPin+0x174>
 312:	cb 01       	movw	r24, r22
 314:	96 2f       	mov	r25, r22
 316:	90 95       	com	r25
 318:	94 23       	and	r25, r20
 31a:	9a bb       	out	0x1a, r25	; 26
 31c:	9b b3       	in	r25, 0x1b	; 27
 31e:	89 2b       	or	r24, r25
 320:	8b bb       	out	0x1b, r24	; 27
 322:	08 95       	ret
 324:	47 b3       	in	r20, 0x17	; 23
 326:	21 e0       	ldi	r18, 0x01	; 1
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	b9 01       	movw	r22, r18
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_InitPin+0x19c>
 32e:	66 0f       	add	r22, r22
 330:	77 1f       	adc	r23, r23
 332:	8a 95       	dec	r24
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_InitPin+0x198>
 336:	cb 01       	movw	r24, r22
 338:	96 2f       	mov	r25, r22
 33a:	90 95       	com	r25
 33c:	94 23       	and	r25, r20
 33e:	97 bb       	out	0x17, r25	; 23
 340:	98 b3       	in	r25, 0x18	; 24
 342:	89 2b       	or	r24, r25
 344:	88 bb       	out	0x18, r24	; 24
 346:	08 95       	ret
 348:	44 b3       	in	r20, 0x14	; 20
 34a:	21 e0       	ldi	r18, 0x01	; 1
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	b9 01       	movw	r22, r18
 350:	02 c0       	rjmp	.+4      	; 0x356 <DIO_InitPin+0x1c0>
 352:	66 0f       	add	r22, r22
 354:	77 1f       	adc	r23, r23
 356:	8a 95       	dec	r24
 358:	e2 f7       	brpl	.-8      	; 0x352 <DIO_InitPin+0x1bc>
 35a:	cb 01       	movw	r24, r22
 35c:	96 2f       	mov	r25, r22
 35e:	90 95       	com	r25
 360:	94 23       	and	r25, r20
 362:	94 bb       	out	0x14, r25	; 20
 364:	95 b3       	in	r25, 0x15	; 21
 366:	89 2b       	or	r24, r25
 368:	85 bb       	out	0x15, r24	; 21
 36a:	08 95       	ret
 36c:	41 b3       	in	r20, 0x11	; 17
 36e:	21 e0       	ldi	r18, 0x01	; 1
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	b9 01       	movw	r22, r18
 374:	02 c0       	rjmp	.+4      	; 0x37a <DIO_InitPin+0x1e4>
 376:	66 0f       	add	r22, r22
 378:	77 1f       	adc	r23, r23
 37a:	8a 95       	dec	r24
 37c:	e2 f7       	brpl	.-8      	; 0x376 <DIO_InitPin+0x1e0>
 37e:	cb 01       	movw	r24, r22
 380:	96 2f       	mov	r25, r22
 382:	90 95       	com	r25
 384:	94 23       	and	r25, r20
 386:	91 bb       	out	0x11, r25	; 17
 388:	92 b3       	in	r25, 0x12	; 18
 38a:	89 2b       	or	r24, r25
 38c:	82 bb       	out	0x12, r24	; 18
 38e:	08 95       	ret

00000390 <DIO_Init>:
 390:	cf 93       	push	r28
 392:	c0 e0       	ldi	r28, 0x00	; 0
 394:	09 c0       	rjmp	.+18     	; 0x3a8 <DIO_Init+0x18>
 396:	ec 2f       	mov	r30, r28
 398:	f0 e0       	ldi	r31, 0x00	; 0
 39a:	e0 5a       	subi	r30, 0xA0	; 160
 39c:	ff 4f       	sbci	r31, 0xFF	; 255
 39e:	60 81       	ld	r22, Z
 3a0:	8c 2f       	mov	r24, r28
 3a2:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_InitPin>
 3a6:	cf 5f       	subi	r28, 0xFF	; 255
 3a8:	c0 32       	cpi	r28, 0x20	; 32
 3aa:	a8 f3       	brcs	.-22     	; 0x396 <DIO_Init+0x6>
 3ac:	cf 91       	pop	r28
 3ae:	08 95       	ret

000003b0 <DIO_WritePort>:
 3b0:	81 30       	cpi	r24, 0x01	; 1
 3b2:	41 f0       	breq	.+16     	; 0x3c4 <DIO_WritePort+0x14>
 3b4:	28 f0       	brcs	.+10     	; 0x3c0 <DIO_WritePort+0x10>
 3b6:	82 30       	cpi	r24, 0x02	; 2
 3b8:	39 f0       	breq	.+14     	; 0x3c8 <DIO_WritePort+0x18>
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	39 f0       	breq	.+14     	; 0x3cc <DIO_WritePort+0x1c>
 3be:	08 95       	ret
 3c0:	6b bb       	out	0x1b, r22	; 27
 3c2:	08 95       	ret
 3c4:	68 bb       	out	0x18, r22	; 24
 3c6:	08 95       	ret
 3c8:	65 bb       	out	0x15, r22	; 21
 3ca:	08 95       	ret
 3cc:	62 bb       	out	0x12, r22	; 18
 3ce:	08 95       	ret

000003d0 <DIO_WritePin>:

void DIO_WritePin(DIO_Pin_t pin, DIO_PinVoltage_t volt)
{
	DIO_port_t port=pin/8;
 3d0:	98 2f       	mov	r25, r24
 3d2:	96 95       	lsr	r25
 3d4:	96 95       	lsr	r25
 3d6:	96 95       	lsr	r25
	u8 pin_num=pin%8;
 3d8:	87 70       	andi	r24, 0x07	; 7
	
	if(volt==HIGH)
 3da:	61 30       	cpi	r22, 0x01	; 1
 3dc:	e1 f5       	brne	.+120    	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
	{
		switch (port)
 3de:	91 30       	cpi	r25, 0x01	; 1
 3e0:	99 f0       	breq	.+38     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3e2:	28 f0       	brcs	.+10     	; 0x3ee <DIO_WritePin+0x1e>
 3e4:	92 30       	cpi	r25, 0x02	; 2
 3e6:	e9 f0       	breq	.+58     	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3e8:	93 30       	cpi	r25, 0x03	; 3
 3ea:	41 f1       	breq	.+80     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 3ec:	08 95       	ret
		{
			case PA:
			
			SET_BIT(PORTA,pin_num);
 3ee:	4b b3       	in	r20, 0x1b	; 27
 3f0:	21 e0       	ldi	r18, 0x01	; 1
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	b9 01       	movw	r22, r18
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <DIO_WritePin+0x2c>
 3f8:	66 0f       	add	r22, r22
 3fa:	77 1f       	adc	r23, r23
 3fc:	8a 95       	dec	r24
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <DIO_WritePin+0x28>
 400:	cb 01       	movw	r24, r22
 402:	84 2b       	or	r24, r20
 404:	8b bb       	out	0x1b, r24	; 27
			break;
 406:	08 95       	ret
			case PB:
			
			SET_BIT(PORTB,pin_num);
 408:	48 b3       	in	r20, 0x18	; 24
 40a:	21 e0       	ldi	r18, 0x01	; 1
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	b9 01       	movw	r22, r18
 410:	02 c0       	rjmp	.+4      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 412:	66 0f       	add	r22, r22
 414:	77 1f       	adc	r23, r23
 416:	8a 95       	dec	r24
 418:	e2 f7       	brpl	.-8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 41a:	cb 01       	movw	r24, r22
 41c:	84 2b       	or	r24, r20
 41e:	88 bb       	out	0x18, r24	; 24
			break;
 420:	08 95       	ret
			case PC:
			
			SET_BIT(PORTC,pin_num);
 422:	45 b3       	in	r20, 0x15	; 21
 424:	21 e0       	ldi	r18, 0x01	; 1
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	b9 01       	movw	r22, r18
 42a:	02 c0       	rjmp	.+4      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 42c:	66 0f       	add	r22, r22
 42e:	77 1f       	adc	r23, r23
 430:	8a 95       	dec	r24
 432:	e2 f7       	brpl	.-8      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 434:	cb 01       	movw	r24, r22
 436:	84 2b       	or	r24, r20
 438:	85 bb       	out	0x15, r24	; 21
			break;
 43a:	08 95       	ret
			case PD:
			
			SET_BIT(PORTD,pin_num);
 43c:	42 b3       	in	r20, 0x12	; 18
 43e:	21 e0       	ldi	r18, 0x01	; 1
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	b9 01       	movw	r22, r18
 444:	02 c0       	rjmp	.+4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 446:	66 0f       	add	r22, r22
 448:	77 1f       	adc	r23, r23
 44a:	8a 95       	dec	r24
 44c:	e2 f7       	brpl	.-8      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 44e:	cb 01       	movw	r24, r22
 450:	84 2b       	or	r24, r20
 452:	82 bb       	out	0x12, r24	; 18
			break;
 454:	08 95       	ret
		}
	}
	else if (volt==LOW)
 456:	61 11       	cpse	r22, r1
 458:	3f c0       	rjmp	.+126    	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
	{
		switch (port)
 45a:	91 30       	cpi	r25, 0x01	; 1
 45c:	a1 f0       	breq	.+40     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 45e:	28 f0       	brcs	.+10     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 460:	92 30       	cpi	r25, 0x02	; 2
 462:	f9 f0       	breq	.+62     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 464:	93 30       	cpi	r25, 0x03	; 3
 466:	59 f1       	breq	.+86     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 468:	08 95       	ret
		{
			case PA:
			
			CLR_BIT(PORTA,pin_num);
 46a:	4b b3       	in	r20, 0x1b	; 27
 46c:	21 e0       	ldi	r18, 0x01	; 1
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	b9 01       	movw	r22, r18
 472:	02 c0       	rjmp	.+4      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 474:	66 0f       	add	r22, r22
 476:	77 1f       	adc	r23, r23
 478:	8a 95       	dec	r24
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 47c:	cb 01       	movw	r24, r22
 47e:	80 95       	com	r24
 480:	84 23       	and	r24, r20
 482:	8b bb       	out	0x1b, r24	; 27
			break;
 484:	08 95       	ret
			case PB:
			
			CLR_BIT(PORTB,pin_num);
 486:	48 b3       	in	r20, 0x18	; 24
 488:	21 e0       	ldi	r18, 0x01	; 1
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	b9 01       	movw	r22, r18
 48e:	02 c0       	rjmp	.+4      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 490:	66 0f       	add	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	8a 95       	dec	r24
 496:	e2 f7       	brpl	.-8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 498:	cb 01       	movw	r24, r22
 49a:	80 95       	com	r24
 49c:	84 23       	and	r24, r20
 49e:	88 bb       	out	0x18, r24	; 24
			break;
 4a0:	08 95       	ret
			case PC:
			
			CLR_BIT(PORTC,pin_num);
 4a2:	45 b3       	in	r20, 0x15	; 21
 4a4:	21 e0       	ldi	r18, 0x01	; 1
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	b9 01       	movw	r22, r18
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
 4ac:	66 0f       	add	r22, r22
 4ae:	77 1f       	adc	r23, r23
 4b0:	8a 95       	dec	r24
 4b2:	e2 f7       	brpl	.-8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4b4:	cb 01       	movw	r24, r22
 4b6:	80 95       	com	r24
 4b8:	84 23       	and	r24, r20
 4ba:	85 bb       	out	0x15, r24	; 21
			break;
 4bc:	08 95       	ret
			case PD:
			
			CLR_BIT(PORTD,pin_num);
 4be:	42 b3       	in	r20, 0x12	; 18
 4c0:	21 e0       	ldi	r18, 0x01	; 1
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	b9 01       	movw	r22, r18
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4c8:	66 0f       	add	r22, r22
 4ca:	77 1f       	adc	r23, r23
 4cc:	8a 95       	dec	r24
 4ce:	e2 f7       	brpl	.-8      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
 4d0:	cb 01       	movw	r24, r22
 4d2:	80 95       	com	r24
 4d4:	84 23       	and	r24, r20
 4d6:	82 bb       	out	0x12, r24	; 18
 4d8:	08 95       	ret

000004da <_exit>:
 4da:	f8 94       	cli

000004dc <__stop_program>:
 4dc:	ff cf       	rjmp	.-2      	; 0x4dc <__stop_program>
